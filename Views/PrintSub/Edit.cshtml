@model ePaperLive.Models.PrintSubscribers

@{
    ViewBag.Title = "Update Print subscriber";
}

<div id="main">

    <!-- ======= Breadcrumbs ======= -->
    <section id="breadcrumbs" class="breadcrumbs">
        <div class="container">

            <ol>
                <li><a href="@Url.Action("index", "home")">Home</a></li>
                <li>@ViewData["Title"]</li>
            </ol>
            <h2>@ViewData["Title"]</h2>

        </div>
    </section><!-- End Breadcrumbs -->
    <!-- ======= Wizard Section ======= -->
    <section id="portfolio-details" class="portfolio-details">
        <div class="container">

            <div class="row gy-4">
                <div class="col-lg-12">
                 

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Update CircPro Identication Number</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group py-2">
                            @Html.LabelFor(model => model.Circprosubid, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Circprosubid, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Circprosubid, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.SubscriberID)
                        <div class="row form-horizontal">
                            <div class="col-md-3">
                                <div class=" form-group py-2">
                                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group py-2">
                                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>




                        <div class="form-group py-2">
                            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.HiddenFor(model => model.AddressID)

                        <div class="form-group py-2">
                            @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group py-2">
                            @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group py-2">
                            @Html.LabelFor(model => model.CityTown, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.CityTown, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.CityTown, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group py-2">
                            @Html.LabelFor(model => model.StateParish, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.StateParish, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.StateParish, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group py-2">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-5">
                                <div class="form-group py-2">
                                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-5">
                                <div class="form-group py-2">
                                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        @Html.HiddenFor(model => model.isActive)




                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-5">
                                <input type="submit" value="Update" class="btn btn-sign-in" />
                            </div>
                        </div>
                    </div>
                    }

                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>

        </div>
    </section><!-- End Wizard Section -->

</div>