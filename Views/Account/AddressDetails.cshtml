@model ePaperLive.Models.AddressDetails

@{
    ViewBag.Title = "Mailing Address";
}

    <main id="main">

        <!-- ======= Breadcrumbs ======= -->
        <section id="breadcrumbs" class="breadcrumbs">
            <div class="container">

                <ol>
                    <li><a href="@Url.Action("index", "home")">Home</a></li>
                    <li>@ViewData["Title"]</li>
                </ol>
                <h2>@ViewData["Title"]</h2>

            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= Wizard Breadcrumbs ======= -->
        <div class="container form-header d-flex mb-4 mt-4">
            <span class="stepIndicator active">Login Details</span>
            <span class="stepIndicator active">Mailing Address</span>
            <span class="stepIndicator">Subscription</span>
            <span class="stepIndicator">Payment</span>
        </div><!-- End Wizard Breadcrumbs -->
        <!-- ======= Wizard Section ======= -->
        <section id="portfolio-details" class="portfolio-details">
            <div class="container">

                <div class="row gy-4">
                    <div class="col-lg-8">
                        <!-- start:wizrd -->
                        @using (Html.BeginForm("AddressDetails", "Account", FormMethod.Post, new { @class = "row g-3 needs-validation", novalidate = "novalidate" }))
                        {
                            @Html.AntiForgeryToken()

                        <div class="row form-horizontal">
                            <h4>Please enter your mailing address </h4>
                            <hr />
                            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @*@Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label" })*@
                                <div class="col-md-10 p-2">
                                    @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(model => model.AddressLine1) } })
                                    @*@Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })*@
                                </div>
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label" })*@
                                <div class="col-md-10 p-2">
                                    @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.AddressLine2) } })
                                    @*@Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })*@
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group p-2">
                                    @*@Html.LabelFor(model => model.CityTown, htmlAttributes: new { @class = "control-label " })*@
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CityTown, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(model => model.CityTown) } })
                                        @*@Html.ValidationMessageFor(model => model.CityTown, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group p-2">
                                    @*@Html.LabelFor(model => model.StateParish, htmlAttributes: new { @class = "control-label " })*@
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.StateParish, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(model => model.StateParish) } })
                                        @*@Html.ValidationMessageFor(model => model.StateParish, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-5">
                                <div class="form-group p-2">
                                    @*@Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label " })*@
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.ZipCode) } })
                                        @*@Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group p-2">
                                    @*@Html.LabelFor(model => model.CountryCode, htmlAttributes: new { @class = "control-label " })*@
                                    <div class="col-md-10">
                                        @if (Model.CountryList != null)
                                        {
                                            @*@Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })*@
                                            @Html.DropDownListFor(model => model.CountryCode, Model.CountryList, "Select Country", new { @class = "form-control", @required = "required" })
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="form-group p-3">
                                @*@Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label " })*@
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Phone) } })
                                    @*@Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })*@
                                </div>
                            </div>
                            <small>Your information will be used in accordance with our <a href="#">Privacy</a>, and may be used to contact you if you do not complete your purchase to check if you need any support.</small>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10 pt-3">
                                    <div class="row">
                                        <div class="col-6">
                                            <input type="submit" value="Prev" name="prevBtn" class="btn btn-sign-in bx-pull-left" />
                                        </div>
                                        <div class="col-6">
                                            <input type="submit" value="Next" name="nextBtn" class="btn btn-sign-in bx-pull-right" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        }
                        <!-- end:wizrd -->
                    </div>
                    <div class="col-lg-4">
                        @Html.Partial("_SubcriptionSummary")
                    </div>


                </div>

            </div>
        </section><!-- End Wizard Section -->

    </main><!-- End #main -->
    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })();

    </script>
