@model ePaperLive.Models.SubscriptionDetails
@using ePaperLive.DBModel
<style>
    #select2-DeliveryAddress_CityTown-container {
        border: 1px solid #ced4da !important;
        display: block;
        /*width: 100%;*/
        width: 215px;
        padding: .475rem 1rem .375rem .75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        border-radius: .375rem;
    }
</style>

<!-- start:wizrd -->

@Html.AntiForgeryToken()
<div class="modal fade" id="delivery-address">
    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"><strong>Add Delivery Address</strong></h4>

            </div>
            <form name="deliveryAddressForm" id="deliveryAddressForm" class="row g-3 needs-validation">

                <div class="modal-body">

                    <div class="row form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <div class="col-md-10 p-3">
                                <div class="form-check">
                                    @Html.EditorFor(model => model.SameAsMailing, new { htmlAttributes = new { @class = "form-check-input" } })
                                    @Html.LabelFor(model => model.SameAsMailing, htmlAttributes: new { @class = "form-check-label" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group p-2">
                                <div class="col-md-12">
                                    @*@Html.EditorFor(model => model.DeliveryAddress.StateParish, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.DeliveryAddress.StateParish) } })*@
                                    @Html.DropDownList("DeliveryAddress.StateParish", ViewBag.Parishes as SelectList, "Select a parish", new { @class = "form-control", id = "DeliveryAddress_StateParish" })
                                    @Html.ValidationMessageFor(model => model.DeliveryAddress.StateParish, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>
                        <div class="col-md-5 px-0">
                            <div class="form-group p-2">
                                <div class="col-md-12">
                                    @*@Html.EditorFor(model => model.DeliveryAddress.CityTown, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.DeliveryAddress.CityTown) } })*@
                                    <select id="DeliveryAddress_CityTown" class="form-control" name="DeliveryAddress.CityTown" aria-label="Default select example">
                                        <option>Select a District</option>>
                                    </select>
                                    @Html.ValidationMessageFor(model => model.DeliveryAddress.CityTown, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="form-group">
                            <div class="col-md-12 p-2">
                                @Html.EditorFor(model => model.DeliveryAddress.AddressLine1, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.DeliveryAddress.AddressLine1) } })
                                @Html.ValidationMessageFor(model => model.DeliveryAddress.AddressLine1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12 p-2">
                                @Html.EditorFor(model => model.DeliveryAddress.AddressLine2, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.DeliveryAddress.AddressLine2) } })
                                @Html.ValidationMessageFor(model => model.DeliveryAddress.AddressLine2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <p class="p-3 small">Contact us at <a href="mailto:circulation@jamaicaobserver.com">circulation@jamaicaobserver.com</a> if your district/town is not listed above*</p>


                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-info" data-bs-dismiss="modal">Close</button>
                    @if (ViewData["savedAddress"] != null)
                    {
                        <button type="submit" class="btn btn-primary" name="saveAddress">Save Address</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-primary" name="saveAddress">Update Address</button>
                    }
                    <br>
                </div>
            </form>


        </div>


    </div>
</div>

<!-- end:wizrd -->
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (() => {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        const forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }

                form.classList.add('was-validated')
            }, false)
        })
    })();



</script>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<script type="text/jscript">
   
    $(function () {
        $.validator.setDefaults({
            ignore: ''
        });

         $("#delivery-address").on('shown.bs.modal', () => {
             alert('modal');
             $("#DeliveryAddress_StateParish").find('select').trigger('change');
        });

        $('#DeliveryAddress_CityTown').select2({
            theme: "bootstrap-5",
            dropdownParent: $("#delivery-address"),
        }).addClass("form-control");

        $('#DeliveryAddress_StateParish').change(function () {
            let parish = $('#DeliveryAddress_StateParish').val();
            var items = '<option value="">Select a District</option>';

            if (parish) {
                $.getJSON('/Account/DistrictList/' + parish, function (data) {
                    $.each(data, function (i, district) {
                        items += '<option value="' + (district.Text) + '">' + district.Text + '</option>';
                    });
                    $('#DeliveryAddress_CityTown').html(items);
                });
            } else { $('#DeliveryAddress_CityTown').html(items); }


        });
    });
</script> 