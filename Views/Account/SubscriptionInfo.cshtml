@model ePaperLive.Models.SubscriptionDetails

@{
    ViewBag.Title = "Subscription";
    ePaperLive.DBModel.Subscriber_Address address = null;
    if (ViewData["savedAddressData"] != null)
    {
        address = (ePaperLive.DBModel.Subscriber_Address)ViewData["savedAddressData"];
        @Html.Label(address.AddressLine1)
    }


}
<style>
    textarea {
        width: 100%
    }
</style>

<div id="main">

    <!-- ======= Breadcrumbs ======= -->
    <section id="breadcrumbs" class="breadcrumbs">
        <div class="container">

            <ol>
                <li><a href="@Url.Action("index", "home")">Home</a></li>
                <li>@ViewData["Title"]</li>
            </ol>
            <h2>@ViewData["Title"]</h2>

        </div>
    </section><!-- End Breadcrumbs -->
    <!-- ======= Wizard Breadcrumbs ======= -->
    <div class="container form-header d-flex mb-4 mt-4">
        <span class="stepIndicator active">Login Details</span>
        <span class="stepIndicator active">Mailing Address</span>
        <span class="stepIndicator active">Subscription</span>
        <span class="stepIndicator">Payment</span>
    </div><!-- End Wizard Breadcrumbs -->
    <!-- ======= Wizard Section ======= -->
    <section id="portfolio-details" class="portfolio-details">
        <div class="container">

            <div class="row gy-4">
                <div class="col-lg-8">

                    <!-- start:wizrd -->
                    @using (Html.BeginForm("SubscriptionInfo", "Account", FormMethod.Post, new { @class = "row g-3 needs-validation", novalidate = "novalidate", name = "subdetails" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h5>Hi @(ViewBag.Name), choose from one of our subscription options</h5>
                            <hr />
                            @*@Html.Partial("_Rates", Model)*@

                            <br />
                            <div id="search-form">
                                <div class="plans pb-3">
                                    <div class="row justify-content-md-center">
                                        <div class="col-lg-3 col-sm-4 p-2">@Html.RadioButtonFor(x => x.RateType, "Epaper", htmlAttributes: new { @autocomplete = "off", @id = "ePaper", @data_request_url = Url.Action("GetRatesList", "account") })<label for="ePaper">ePaper Edition</label></div>
                                        <div class="col-lg-3 col-sm-4 p-2">@Html.RadioButtonFor(x => x.RateType, "Print", htmlAttributes: new { @autocomplete = "off", @id = "Print", @data_request_url = Url.Action("GetRatesList", "account") })<label for="Print">Print Edition</label></div>
                                        <div class="col-lg-3 col-sm-4 p-2">@Html.RadioButtonFor(x => x.RateType, "Bundle", htmlAttributes: new { @autocomplete = "off", @id = "Bundle", @data_request_url = Url.Action("GetRatesList", "account") })<label for="Bundle">Print & ePaper Bundle</label></div>
                                    </div>
                                </div>
                                @* @Html.Action("GetRatesList", "Account")*@
                            </div>
                            <div class="container pb-3" id="rates-results" style="display:none;">
                                <p>Loading...</p>

                            </div>
                            @Html.HiddenFor(m => m.RateID, new { @class = ".do-not-ignore" })

                            <div class="form-group p-2" id="del-address" style="display: none">
                                <hr />
                                <div class="row justify-content-md-center">
                                    <div class="col-lg-12">
                                        <button type="button" class="btn-sign-in" data-bs-toggle="modal" data-bs-target="#delivery-address">Add delivery address</button>
                                        <div id="del-address-details" style="display:none;"></div>
                                    </div>
                                </div>
                            </div>

                            <div id="delAddressDetails"> </div>

                            <div class="form-group p-2" id="del-instructions" style="display: none">
                                @Html.LabelFor(model => model.DeliveryInstructions, htmlAttributes: new { @class = "form-label " })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.DeliveryInstructions, new { htmlAttributes = new { @class = "form-control", @rows = 5 } })
                                </div>
                                <hr />

                            </div>

                            <div class="form-group p-2">
                                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label fw-bold hidden" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.StartDate, "", new { htmlAttributes = new { @class = "form-control hidden", maxlength = 10, @required = "required" } })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-md-4 p-3">
                                        <div class="form-check">
                                            @Html.EditorFor(model => model.NewsletterSignUp, new { htmlAttributes = new { @class = "form-check-input" } })
                                            @Html.LabelFor(model => model.NewsletterSignUp, htmlAttributes: new { @class = "form-check-label" })
                                        </div>
                                    </div>
                                    <div class="col-md-8 p-3">
                                        <div class="form-check">
                                            @Html.EditorFor(model => model.NotificationEmail, new { htmlAttributes = new { @class = "form-check-input" } })
                                            @Html.LabelFor(model => model.NotificationEmail, htmlAttributes: new { @class = "form-check-label" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">

                            </div>

                            @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-12 pt-3">
                                    <div class="row">
                                        <div class="col-6">
                                            <input type="submit" value="Prev" name="prevBtn" class="btn btn-sign-in bx-pull-left" />
                                        </div>
                                        <div class="col-6">
                                            <input type="submit" value="Next" name="nextBtn" class="btn btn-sign-in bx-pull-right" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="AddressAdded" />
                    }
                    <!-- end:wizrd -->
                    <!-- Delivery Modal -->
                    @{Html.RenderPartial("_DeliveryAddressModal"); }
                    <!-- end: Delivery Modal -->
                </div>
                <div class="col-lg-4">
                    @Html.Partial("_SubcriptionSummary")
                </div>


                @if ((Dictionary<string, int>)ViewData["preloadSub"] != null)
                {
                    var preloadSub = (Dictionary<string, int>)ViewData["preloadSub"];
                    foreach (var plans in preloadSub)
                    {
                        @Html.Hidden("preloadPlan", plans.Key.Split('|')[0])
                        @Html.Hidden("preloadRate", plans.Value)
                        @Html.Hidden("preloadRateDesc", plans.Key.Split('|')[2])

                    }
                }

            </div>

        </div>
    </section><!-- End Wizard Section -->

</div><!-- End #main -->


@section scripts{
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <script>
        // extend range validator method to treat checkboxes differently
        var defaultRangeValidator = $.validator.methods.range;
        $.validator.methods.range = function (value, element, param) {
            if (element.type === 'checkbox') {
                // if it's a checkbox return true if it is checked
                return element.checked;
            } else {
                // otherwise run the default validation function
                return defaultRangeValidator.call(this, value, element, param);
            }
        }
    </script>
    <script src="~/Scripts/site/subscriptiondetails.js?v=1.1"></script>

}
