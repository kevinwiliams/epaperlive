@model ePaperLive.Models.AuthSubcriber

@{
    ViewBag.Title = "Profile";
}
<!-- ======= Breadcrumbs ======= -->
<section id="breadcrumbs" class="breadcrumbs">
    <div class="container">

        <ol>
            <li><a href="@Url.Action("dashboard", "account")">Home</a></li>
            <li>@ViewData["Title"]</li>
        </ol>
        <h2>@ViewData["Title"]</h2>

    </div>
</section><!-- End Breadcrumbs -->
<!-- ======= Wizard Section ======= -->
<section id="portfolio-details" class="portfolio-details">
    <div class="container">

        <div class="row gy-4">
            <div class="col-lg-8">
                <!-- left-col -->
                <div class="container main">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Update your information below</h4>
                        <hr />

                        <h2 class="text-success">@ViewBag.msg</h2>
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.SubscriberID)

                        <div class="form-group p-2">
                            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                <strong>@User.Identity.Name</strong>
                            </div>
                        </div>
                        <div class="form-group p-2">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group p-2">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <h5 class="pt-5">Mailing Address</h5>

                        @*@foreach (var model in Model.AddressDetails.Where(x => x.AddressType == "M"))*@
                        @if (Model.AddressDetails != null)
                        {
                            for (int i = 0; i < Model.AddressDetails.Where(x => x.AddressType == "M").Count(); i++)
                            {
                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label" })*@
                                    <div class="col-md-6 p-2">
                                        @Html.EditorFor(x => x.AddressDetails[i].AddressLine1, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(x => x.AddressDetails[i].AddressLine1) } })
                                        @*@Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                                <div class="form-group p-2">
                                    @*@Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label" })*@
                                    <div class="col-md-6">
                                        @Html.EditorFor(x => x.AddressDetails[i].AddressLine2, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(x => x.AddressDetails[i].AddressLine2) } })
                                        @*@Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                                <div class="col-md-5 p-2">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.CityTown, htmlAttributes: new { @class = "control-label " })*@
                                        <div class="col-md-8">
                                            @Html.EditorFor(x => x.AddressDetails[i].CityTown, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(x => x.AddressDetails[i].CityTown) } })
                                            @*@Html.ValidationMessageFor(model => model.CityTown, "", new { @class = "text-danger" })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group p-2">
                                        @*@Html.LabelFor(model => model.StateParish, htmlAttributes: new { @class = "control-label " })*@
                                        <div class="col-md-8">
                                            @Html.EditorFor(x => x.AddressDetails[i].StateParish, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(x => x.AddressDetails[i].StateParish) } })
                                            @*@Html.ValidationMessageFor(model => model.StateParish, "", new { @class = "text-danger" })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group p-2">
                                        @*@Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label " })*@
                                        <div class="col-md-5">
                                            @Html.EditorFor(x => x.AddressDetails[i].ZipCode, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(x => x.AddressDetails[i].ZipCode) } })
                                            @*@Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group p-2">
                                        @*@Html.LabelFor(model => model.CountryCode, htmlAttributes: new { @class = "control-label " })*@
                                        <div class="col-md-5">
                                            @Html.EditorFor(x => x.AddressDetails[i].CountryCode, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(x => x.AddressDetails[i].CountryCode) } })
                                            @*@Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })*@
                                        </div>
                                    </div>
                                </div>
                                @Html.HiddenFor(x => x.AddressDetails[i].AddressType)

                            }
                        }



                        <div class="form-group p-3">
                            @*@Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label " })*@
                            <div class="col-md-4">
                                @*@Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Phone) } })*@
                                @*@Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Update Profile" class="btn btn-sign-in" />
                            </div>
                        </div>
                    </div>
                    }

                </div>
                <!-- end:left-col -->
            </div>
            <div class="col-lg-4">
                <div class="portfolio-info">
                    <h3>Current Subscription: <span class="text-success">Active</span> </h3>
                    @if (ViewBag.plans != null)
                    {
                        foreach (var item in (List<ePaperLive.Models.SubscriptionDetails>)ViewBag.plans)
                        {
                            <p>@item.RateDescription</p>
                            <small>
                                <strong>Start:</strong> @Convert.ToDateTime(item.StartDate).ToString("dd MMMM yyyy") <br />
                                <strong>End:&nbsp;&nbsp;</strong> @Convert.ToDateTime(item.EndDate).ToString("dd MMMM yyyy") <br />
                                <!-- <a href="#">Cancel</a> -->
                            </small>

                        }
                    }
                    <br />

                </div>

            </div>
        </div>
    </div>
</section>
