@model ePaperLive.Models.UsersWithRoles

@{
    ViewBag.Title = "Edit";
}

<div id="main">

    <!-- ======= Breadcrumbs ======= -->
    <section id="breadcrumbs" class="breadcrumbs">
        <div class="container">

            <ol>
                <li><a href="@Url.Action("index", "home")">Home</a></li>
                <li>@ViewData["Title"]</li>
            </ol>
            <h2>@ViewData["Title"]</h2>

        </div>
    </section><!-- End Breadcrumbs -->
    <!-- ======= Wizard Section ======= -->
    <section id="portfolio-details" class="portfolio-details">
        <div class="container">

            <div class="row gy-4">
                <div class="col-lg-12">

                    <p>
                        @*@Html.ActionLink("Create New", "Create")*@
                    </p>
                    <!-- start:wizrd -->

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class=" row form-horizontal">
                            <h4>Update User with Role</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.SubscriberID)
                            @Html.HiddenFor(model => model.RoleID)
                            @Html.HiddenFor(model => model.AddressID)
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                      
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group pt-1">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group pt-1">
                                @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control hidden" } })
                                    @Html.DropDownList("Roles", (IEnumerable<SelectListItem>)ViewBag.Roles as SelectList, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                                </div>
                            </div>

                           

                            <div class="form-group pt-1">
                                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group pt-3">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Update User" class="btn btn-sign-in" />
                                </div>
                            </div>
                        </div>
                    }

                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                    <!-- end:wizrd -->
                </div>
            </div>

        </div>
    </section><!-- End Wizard Section -->

</div>

@section scripts{

    <script>
        $(document).ready(function () {
            var role = $("#Role").val();
            $("#Roles").val(role).trigger('change');
        });

        $('#Roles').on('change', (e) => {
            console.log(e.currentTarget.value);
            $("#Role").val(e.currentTarget.value);
        });
    </script>
}
