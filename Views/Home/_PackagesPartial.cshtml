@model ePaperLive.Models.PrintSubRates

@if (Model.Rates == null)
{
    <h3 class="text-error">Loading.. please wait...</h3>
}
else
{
    <style>
        .accordion-button:not(.collapsed) {
            color: red;
            background-color: #f4cccc1f;
        }

        .accordion-button:focus {
            box-shadow: none;
        }
        .btn-link {
            text-decoration: none;
            color: #E62B34;
        }
        .btn-link:hover{
            color: #1eb4ff;
        }
    </style>
    <div class="row">
        <div class="col-lg-4 mt-2 mb-tg-0 order-1 order-lg-1">
            <ul class="nav nav-tabs flex-column">
                <li class="nav-item" data-aos="fade-up">
                    <a class="nav-link active show" data-bs-toggle="tab" href="#tab-1">
                        <h4>ePaper Only</h4>
                        <p>Choose from our ePaper options</p>
                    </a>
                </li>
                <li class="nav-item mt-2" data-aos="fade-up" data-aos-delay="100">
                    <a class="nav-link" data-bs-toggle="tab" href="#tab-2">
                        <h4>Print Only</h4>
                        <p>Get our print media on your schedule</p>
                    </a>
                </li>
                <li class="nav-item mt-2" data-aos="fade-up" data-aos-delay="200">
                    <a class="nav-link" data-bs-toggle="tab" href="#tab-3">
                        <h4>ePaper &amp; Print Bundles</h4>
                        <p>Best of both worlds for the avid reader.</p>
                    </a>
                </li>

            </ul>
        </div>
        <div class="col-lg-8 order-2 order-lg-2" data-aos="zoom-in">
            <div class="tab-content">
                <div class="tab-pane active show" id="tab-1">
                    <div class="row">
                        <div class=" col-md-7 col-sm-12 float-left">
                            @foreach (var plans in Model.Rates.Where(x => x.Type == "Epaper"))
                            {
                                <div class="value p-2">
                                    <button class="btn btn-link" name="subscribeNow" 
                                            data-is-feature ="false"
                                            data-sub-id="@(plans.Rateid)" 
                                            data-rate-type="@(plans.Type)" 
                                            data-rate-price="@(plans.Curr + " " + String.Format("{0:C}", plans.Rate))" 
                                            data-bs-toggle="tooltip" 
                                            data-bs-placement="top" 
                                            title="Subscribe now">
                                        @(" " + plans.RateDescr)
                                    </button>
                                    <br />
                                    <span class="m-auto fw-bold">@(plans.Curr + " " + String.Format("{0:C}", plans.Rate)) </span>
                                </div>
                            }

                        </div>
                        <div class="col-5  d-none d-md-block">
                            <figure>
                                <img src="~/assets/img/bundle.jpg" alt="" class="img-fluid">
                            </figure>
                        </div>
                    </div>
                </div>

                <div class="tab-pane" id="tab-2">
                    <div class="row">
                        <div class="col-md-7 col-sm-12 float-left">

                            <div class="accordion" id="printAccordion">
                                <!-- start: accordion-->
                                @{
                                    var currentDesc = "";
                                    var showTab = "";
                                    var printSubs = Model.Rates.Where(x => x.Type == "Print");
                                }
                                @foreach (var plans in printSubs)
                                {
                                    var printWeeks = "  " + plans.PrintTerm + " " + plans.PrintTermUnit + " ";

                                    var mainDesc = plans.RateDescr;
                                    if (mainDesc != currentDesc && currentDesc != "")
                                    {
                                        <!-- start:last tag -->
                                    @:</div>
                                @:</div>
                            @:</div>
 <!-- end:last tag -->
                        }
                        if (mainDesc != currentDesc)
                        {

                            <!-- start: top -->
                            @:<div class="accordion-item">
                                <h2 class="accordion-header" id="@(mainDesc.Replace(" ", "").Replace("&", "") + "Head")">
                                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#@mainDesc.Replace(" ", "").Replace("&", "")" aria-expanded="true" aria-controls="@mainDesc.Replace(" ", "").Replace("&", "")">
                                        @mainDesc
                                    </button>
                                </h2>

                                @:<div id="@mainDesc.Replace(" ", "").Replace("&", "")" class="accordion-collapse collapse @showTab" aria-labelledby="@(mainDesc.Replace(" ", "").Replace("&", "") + "Head")" data-bs-parent="#printAccordion">
                                    @:<div class="accordion-body">
 <!-- end: top-->
                                    }
                                    <!-- start: rates-->
                                    <div class="value p-2">
                                        <span class="text-muted small">Delivery Frequency: @(" " + plans.PrintDayPattern)</span><br>
                                        <div class="d-flex flex-row justify-content-end">
                                            <button class="btn btn-link" name="subscribeNow" 
                                                    data-sub-id="@(plans.Rateid)" 
                                                    data-rate-type="@(plans.Type)" 
                                                    data-rate-price="@(plans.Curr + " " + String.Format("{0:C}", plans.Rate))" 
                                                    data-rate-desc="@mainDesc.Replace(" ", "").Replace("&", "")" 
                                                    data-bs-toggle="tooltip" data-bs-placement="top" title="Subscribe now">
                                                @(" " + printWeeks)<br />
                                            </button>
                                            <br />
                                            <span class="my-3 fw-bold">@(plans.Curr + " " + String.Format("{0:C}", plans.Rate)) </span>
                                        </div>
                                    </div>	
                                    <!-- end: rates-->

                                    currentDesc = mainDesc;
                                    showTab = "";

                                    if (plans == printSubs.Last())
                                    {
                                        <!-- start:last tag -->
                                    @:</div>
                                @:</div>
                            @:</div>
 <!-- end:last tag -->
                        }
                    }
                                <!-- end: accordion-->
                            </div>
                        </div>
                        <div class="col-5  d-none d-md-block">
                            <figure>
                                <img src="~/assets/img/print.png?v=2" alt="" class="img-fluid">
                            </figure>
                        </div>
                    </div>
                </div>

                <div class="tab-pane" id="tab-3">
                    <div class="row">
                        <div class=" col-md-7 col-sm-12 float-left">
                            @foreach (var plans in Model.Rates.Where(x => x.Type == "Bundle"))
                            {
                                <div class="value p-2">
                                    <button class="btn btn-link" name="subscribeNow" 
                                            style="text-align: right !important"
                                            data-sub-id="@(plans.Rateid)" 
                                            data-rate-type="@(plans.Type)" 
                                            data-rate-price="@(plans.Curr + " " + String.Format("{0:C}", plans.Rate))" 
                                            data-bs-toggle="tooltip" data-bs-placement="top" title="Subscribe now">
                                        @(" " + plans.RateDescr.Split('/')[0] ) <br /> @(plans.RateDescr.Split('/')[1])
                                    </button>
                                    <br />
                                    <span class="m-auto fw-bold">@(plans.Curr + " " + String.Format("{0:C}", plans.Rate)) </span>
                                </div>
                            }

                        </div>
                        <div class="col-5  d-none d-md-block">
                            <figure>
                                <img src="~/assets/img/bundle.png" alt="" class="img-fluid">
                            </figure>
                        </div>
                    </div>
                </div>

                </div>
                </div>
                </div>

            }

