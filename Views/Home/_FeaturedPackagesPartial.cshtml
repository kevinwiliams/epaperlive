@model ePaperLive.Models.PrintSubRates

@{
    var tabClass = "";
    int delay = 0;
    foreach (var plans in Model.Rates.Where(x => x.IsFeatured == true).OrderByDescending(x => x.Rate))
    {
        var isCTA = (plans.IsCTA == true) ? "featured" : "";
        var featureList = plans.FeatureList.Split(',');
        // var printDuration = plans.
        var printWeeks = (plans.Type != "Epaper") ? "  " + plans.PrintTerm + " " + plans.PrintTermUnit + " " : "";
        var epaperWeeks = (plans.Type == "Epaper") ? "  " + plans.ETerm + " " + plans.ETermUnit + " " : "";
        var duration = (plans.Type != "Epaper") ? printWeeks : epaperWeeks;
        string featureText = "";
        string rateFreq = "";
        var ratePrice = (plans.OfferIntroRate) ? plans.IntroRate : plans.Rate;

        <div class="col-lg-3 col-md-6 pb-sm-3 @tabClass">
            <div class="box @isCTA" data-aos="zoom-in" data-aos-delay="@delay">
                @if (plans.BestDealFlag == true)
                {
                    <span class="advanced">Best Deal</span>
                }
                <h3>
                    @if (plans.Type == "Bundle")
                    {
                        @("ePaper & Print Bundle")
                    }
                    else { 
                        @(plans.Type) 
                    }

                    </h3>
                <h4 class="mb-1">
                    <sup>$</sup>@String.Format("{0:n}", ratePrice)
                    <!--    <span> / month</span> -->
                </h4>
                @if (plans.OfferIntroRate == true)
                {
                    <span class="text-black-50 text-decoration-line-through fs-4">@String.Format("${0:n}", plans.Rate)</span>
                }
                <ul class="mt-4">
                    <p>
                        @if (plans.Type == "Bundle")
                        {
                            @("Print ")
                        }
                        Duration: @duration
                    </p>
                    @foreach (var item in featureList)
                    {
                        var fieldValue = item.Split('[', ']');
                        featureText = fieldValue[0];

                        if (System.Text.RegularExpressions.Regex.IsMatch(featureText, @"[0-9]+$"))
                        {
                            featureText = ePaperLive.Util.DeliveryFreqToDate(featureText.Trim());
                            rateFreq = featureText;
                        }
                        var cssClass = (item.EndsWith("]")) ? fieldValue[1] : "";

                        <li><span class="@cssClass">@featureText</span></li>
                    }
                </ul>
                <div class="btn-wrap  mb-3">
                    <a href="" class="btn-buy"
                       name="subscribeNow"
                       data-del-freq="@("Delivery Frequency: " + rateFreq)"
                       data-is-feature="true"
                       data-sub-id="@(plans.Rateid)"
                       data-rate-desc="@plans.RateDescr.Replace(" ", "").Replace("&", "")"
                       data-rate-type="@(plans.Type)"
                       data-rate-price="@(plans.Curr + " " + String.Format("{0:C}", ratePrice))"
                       data-bs-toggle="tooltip"
                       data-bs-placement="top"
                       title="Subscribe now">Subscribe</a>
                </div>
                <input type="hidden" name="rateText" value="@plans.RateDescr" />
            </div>
        </div>
        tabClass = "mt-4 mt-md-0";
        delay += 100;
        rateFreq = "";
    }


}
@Scripts.Render("~/bundles/jquery")
<script type="text/jscript">

    $(function () {
        //$('.btn-wrap').addClass('position-absolute bottom-0 translate-middle-x start-50');
    });

 </script>