@model ePaperLive.Models.AuthSubcriber

@{
    ViewBag.Title = "Add Subscriber";
}

<div id="main">

    <!-- ======= Breadcrumbs ======= -->
    <section id="breadcrumbs" class="breadcrumbs">
        <div class="container">

            <ol>
                <li><a href="@Url.Action("index", "home")">Home</a></li>
                <li><a href="@Url.Action("epapersub", "admin")">ePaper Subscribers</a></li>
                <li>@ViewData["Title"]</li>
            </ol>
            <h2>@ViewData["Title"]</h2>

        </div>
    </section><!-- End Breadcrumbs -->
    <!-- ======= Wizard Section ======= -->
    <section id="portfolio-details" class="portfolio-details">
        <div class="container">
            @using (Html.BeginForm("AddSubscriber", "EpaperSub", FormMethod.Post, new { @class = "row g-3 needs-validation", novalidate = "novalidate", name = "subdetails" }))
            {
                <div class="row gy-4">

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    <div class="col-lg-6">

                        <!-- start:wizrd -->

                        <div class="form-horizontal">
                            <div class="row form-horizontal">
                                <h5>Step 1: Please provide the basic information.</h5>
                                <hr />
                                @*@System.Globalization.RegionInfo.CurrentRegion.DisplayName*@
                                <div class="offset-md-1 col-md-5 p-2">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(model => model.FirstName) } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5 p-2">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(model => model.LastName) } })
                                        </div>
                                    </div>
                                </div>


                                <div class="form-group p-2">
                                    @*@Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-4" })*@
                                    <div class="offset-md-1 col-md-8">
                                        @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control mb-3", @required = "required", placeholder = Html.DisplayNameFor(model => model.EmailAddress) } })
                                        @Html.EditorFor(model => model.SendMail, new { htmlAttributes = new { @class = "form-check-input" } })
                                        @Html.LabelFor(model => model.SendMail, htmlAttributes: new { @class = "form-check-label" })



                                    </div>
                                </div>
                                @*<div class="form-group col-md-5">
                                        <div class="input-group py-2 ">
                                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                            <button type="button" class="btn btn-danger btn-coupon-code">Generate Password</button>

                                        </div>
                                    </div>*@
                                <div class="offset-md-1 col-md-8 p-2">
                                    <div class="form-group">
                                        <div class="col-md-10 input-group position-relative">
                                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(model => model.Password) } })
                                            <i class="fa-solid fa-eye" id="eye"></i>
                                            <button type="button" class="btn btn-danger btn-coupon-code" data-request-url="@Url.Action("generatepassword","epapersub")">Generate Password</button>

                                        </div>
                                    </div>
                                </div>
                                @*
                                    <div class="col-md-5 p-2">
                                        <div class="form-group">
                                            <div class="col-md-10 position-relative">
                                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(model => model.ConfirmPassword) } })
                                                <i class="fa-solid fa-eye" id="eyeC"></i>

                                            </div>
                                        </div>
                                    </div>
                                *@

                            </div>
                            <div class="row form-horizontal py-3">
                                <p><strong>Mailing address</strong> </p>
                                <hr />
                                <div class="offset-md-1 form-group">
                                    @*@Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label" })*@
                                    <div class="col-md-10 p-2">
                                        @Html.EditorFor(model => model.AddressDetails.FirstOrDefault().AddressLine1, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(model => model.AddressDetails.FirstOrDefault().AddressLine1) } })
                                        @*@Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>

                                <div class="offset-md-1 form-group ">
                                    @*@Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label" })*@
                                    <div class="col-md-10 p-2">
                                        @Html.EditorFor(model => model.AddressDetails.FirstOrDefault().AddressLine2, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.AddressDetails.FirstOrDefault().AddressLine2) } })
                                        @*@Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                                <div class="offset-md-1 col-md-5">
                                    <div class="form-group p-2">
                                        @*@Html.LabelFor(model => model.CityTown, htmlAttributes: new { @class = "control-label " })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.AddressDetails.FirstOrDefault().CityTown, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(model => model.AddressDetails.FirstOrDefault().CityTown) } })
                                            <select id="CityTownList" class="form-control pb-sm-3 hidden" name="CityTownList" aria-label="District" required="required">
                                                <option>Select a District</option>>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group p-2">
                                        @*@Html.LabelFor(model => model.StateParish, htmlAttributes: new { @class = "control-label " })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.AddressDetails.FirstOrDefault().StateParish, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = Html.DisplayNameFor(model => model.AddressDetails.FirstOrDefault().StateParish) } })
                                            @Html.DropDownList("StateParishList", ViewBag.Parishes as SelectList, "Select a parish", new { @class = "form-control", id = "StateParishList", @required = "required", @style = "display: none" })
                                            @*@Html.ValidationMessageFor(model => model.StateParish, "", new { @class = "text-danger" })*@
                                        </div>
                                    </div>
                                </div>

                                <div class="offset-md-1 col-md-5">
                                    <div class="form-group p-2">
                                        @*@Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label " })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.AddressDetails.FirstOrDefault().ZipCode, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.AddressDetails.FirstOrDefault().ZipCode) } })
                                            @*@Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group p-2">
                                        @*@Html.LabelFor(model => model.CountryCode, htmlAttributes: new { @class = "control-label " })*@
                                        <div class="col-md-10">
                                            @if (ViewBag.CountryList != null)
                                            {
                                                @*@Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })*@
                                                @Html.DropDownListFor(model => model.AddressDetails.FirstOrDefault().CountryCode, ViewBag.CountryList as List<SelectListItem>, "Select Country", new { @class = "form-control", @required = "required" })
                                            }
                                        </div>
                                    </div>
                                </div>

                                <div class="offset-md-1 form-group p-3">
                                    @*@Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label " })*@
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.AddressDetails.FirstOrDefault().Phone, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.AddressDetails.FirstOrDefault().Phone) } })
                                        @*@Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                                <hr>
                                <div class="form-group">
                                    <fieldset>
                                        <legend>Step 3: Update payment information</legend>

                                        <div class="col-6">
                                            @Html.DropDownList("GetPaymentList", ViewBag.GetPaymentList as SelectList, "Select Payment Type", new { @class = "form-control py-2", id = "PaymentList", @required = "required" })
                                            @Html.EditorFor(model => model.PaymentDetails.FirstOrDefault().ConfirmationNumber, new { htmlAttributes = new { @class = "form-control my-3 hidden", placeholder = "Enter check number or transaction ref." } })
                                            @Html.ValidationMessageFor(model => model.PaymentDetails.FirstOrDefault().ConfirmationNumber, "", new { @class = "text-danger" })

                                            @Html.EditorFor(model => model.PaymentDetails.FirstOrDefault().PaymentType, new { htmlAttributes = new { @class = "form-control py-2 hidden", placeholder = Html.DisplayNameFor(model => model.PaymentDetails.FirstOrDefault().PaymentType), @required = "required" } })

                                        </div>

                                        <div class="row py-2">
                                            <div class="col-2">
                                                @Html.EditorFor(model => model.PaymentDetails.FirstOrDefault().Currency, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.PaymentDetails.FirstOrDefault().Currency), @required = "required" } })
                                            </div>
                                            <div class="col-4">
                                                @Html.EditorFor(model => model.PaymentDetails.FirstOrDefault().CardAmount, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.PaymentDetails.FirstOrDefault().CardAmount), @required = "required" } })
                                            </div>
                                            <div class="col-4">
                                                @Html.EditorFor(model => model.PaymentDetails.FirstOrDefault().SubType, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.PaymentDetails.FirstOrDefault().SubType), @required = "required" } })

                                            </div>

                                        </div>
                                        <input type="hidden" id="originalAmount" />
                                        @Html.EditorFor(model => model.PaymentDetails.FirstOrDefault().RateDescription, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.PaymentDetails.FirstOrDefault().RateDescription), @required = "required" } })

                                    </fieldset>


                                    @*@Html.EditorFor(model => model.PaymentDetails.FirstOrDefault().RateTerm)*@
                                </div>

                            </div>


                        </div>

                        <!-- end:wizrd -->
                    </div>
                    <div class="col-lg-6">
                        <!-- start:wizrd -->
                        <div class="form-horizontal">
                            <h5>Step 2: Choose from one of the subscription options</h5>
                            <hr />
                            @*@Html.Partial("_Rates", Model)*@

                            <br />
                            <div id="search-form">
                                <div class="plans pb-3">
                                    <div class="row justify-content-md-center">
                                        <div class="col-lg-3 col-sm-4 p-2">@Html.RadioButtonFor(x => x.SubscriptionDetails.FirstOrDefault().RateType, "Epaper", htmlAttributes: new { @autocomplete = "off", @id = "ePaper", @data_request_url = Url.Action("GetRatesListAdmin", "account") })<label for="ePaper">ePaper Edition</label></div>
                                        <div class="col-lg-3 col-sm-4 p-2">@Html.RadioButtonFor(x => x.SubscriptionDetails.FirstOrDefault().RateType, "Print", htmlAttributes: new { @autocomplete = "off", @id = "Print", @data_request_url = Url.Action("GetRatesListAdmin", "account") })<label for="Print">Print Edition</label></div>
                                        <div class="col-lg-3 col-sm-4 p-2">@Html.RadioButtonFor(x => x.SubscriptionDetails.FirstOrDefault().RateType, "Bundle", htmlAttributes: new { @autocomplete = "off", @id = "Bundle", @data_request_url = Url.Action("GetRatesListAdmin", "account") })<label for="Bundle">Print & ePaper Bundle</label></div>
                                    </div>
                                </div>
                                @* @Html.Action("GetRatesList", "Account")*@
                            </div>
                            <div class="container pb-3" id="rates-results" style="display:none;">
                                <p>Loading...</p>

                            </div>

                            <div class="form-group p-2" id="del-address" style="display: none">
                                <hr />
                                <div class="row justify-content-md-center">
                                    <div class="col-lg-12">
                                        <button type="button" class="btn-sign-in" data-bs-toggle="modal" data-bs-target="#delivery-address">Add delivery address</button>
                                        <div id="del-address-details" style="display:none;"></div>
                                    </div>
                                </div>
                            </div>

                            <div id="delAddressDetails"> </div>

                            <div class="form-group p-2" id="del-instructions" style="display: none">
                                @Html.LabelFor(model => model.SubscriptionDetails.FirstOrDefault().DeliveryInstructions, htmlAttributes: new { @class = "form-label " })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.SubscriptionDetails.FirstOrDefault().DeliveryInstructions, new { htmlAttributes = new { @class = "form-control", @rows = 5 } })
                                </div>
                                <hr />

                            </div>

                            <div class="form-group p-2">
                                @Html.LabelFor(model => model.SubscriptionDetails.FirstOrDefault().StartDate, htmlAttributes: new { @class = "control-label fw-bold hidden" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.SubscriptionDetails.FirstOrDefault().StartDate, "", new { htmlAttributes = new { @class = "form-control hidden", maxlength = 10, @required = "required" } })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-md-4 p-3">
                                        <div class="form-check">
                                            @Html.EditorFor(model => model.SubscriptionDetails.FirstOrDefault().NewsletterSignUp, new { htmlAttributes = new { @class = "form-check-input hidden" } })
                                            @Html.LabelFor(model => model.SubscriptionDetails.FirstOrDefault().NewsletterSignUp, htmlAttributes: new { @class = "form-check-label hidden" })
                                        </div>
                                    </div>
                                    <div class="col-md-8 p-3">
                                        <div class="form-check">
                                            @Html.EditorFor(model => model.SubscriptionDetails.FirstOrDefault().NotificationEmail, new { htmlAttributes = new { @class = "form-check-input hidden" } })
                                            @Html.LabelFor(model => model.SubscriptionDetails.FirstOrDefault().NotificationEmail, htmlAttributes: new { @class = "form-check-label hidden" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @{
                                var role = (User.IsInRole("Circulation")) ? "Circulation" : "Admin";
                            }

                            <input type="hidden" id="UserRole" value="@role" />
                            @Html.Hidden("mailSend")


                            <!-- end:wizrd -->
                            <!-- Delivery Modal -->
                            <!-- end: Delivery Modal -->
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    <div class=" col-md-12 pt-3">
                        <div class="row">
                            <div class="col-12">
                                <input type="submit" value="Create New Subscriber" name="nextBtn" id="nextBtn" class="btn btn-sign-in bx-pull-left" />
                            </div>
                        </div>

                    </div>
                </div>
            }
        </div>
    </section><!-- End Wizard Section -->

</div>
@Scripts.Render("~/bundles/jquery")

<script src="~/Scripts/site/addSubscriber.js?v=3"></script>

@section scripts{

}